//file:noinspection VulnerableLibrariesLocal
plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    //NMS
    id("io.papermc.paperweight.userdev") version "1.5.6"

    //LOMBOK
    id 'io.freefair.lombok' version '5.1.0'
}

group 'me.antritus'
version '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }

}

dependencies {
    implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
    implementation('org.mariadb.jdbc:mariadb-java-client:3.1.4')

    implementation 'bet.astral:MessageManager:1.5-dev'
    implementation 'bet.astral:Auth:1.0'
    // combat manager
    compileOnly ('me.antritus:FluffyCombat:1.1')
    // TPA
    compileOnly 'me.antritus:Wormhole:1.2'
    // Economy
    //compileOnly 'me.antritus:CosmicCapitalAPI:1.2.4'
    compileOnly ('me.antritus:CosmicCapitalAPI:1.2.5')

    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    //compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'
    compileOnly ('net.luckperms:api:5.4')
    compileOnly ('me.clip:placeholderapi:2.11.2')
    compileOnly ('me.lucko:spark-api:0.1-SNAPSHOT')

    // Discord
    implementation 'net.dv8tion:JDA:5.0.0-beta.10'

    paperweight.paperDevBundle("1.20.2-R0.1-SNAPSHOT")
}



// Some shit is importing 1.13 bukkit api and not 1.20.1 api
configurations.compileOnly {
    exclude group: 'org.spigotmc', module: 'spigot'
    exclude group: 'org.spigotmc', module: 'spigot-api'
    exclude group: 'org.bukkit', module: 'bukkit'
}


shadowJar {
    archiveClassifier = null
}

tasks.assemble {
    dependsOn(reobfJar)
}

jar {
    enabled = false
    dependsOn(shadowJar)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = '17.PREVIEW'
    targetCompatibility = '17.PREVIEW'
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 12 || JavaVersion.current().isJava12Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching(['*.yml']) {
        expand([version: version])
    }
}

configurations {
}